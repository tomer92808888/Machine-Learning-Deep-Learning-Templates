# -*- coding: utf-8 -*-
"""Classification Deep learning

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1O7H946OyCvmxhB44dsaMan5QqvClVr2L
"""

import tensorflow as tf

# Load in the data
from sklearn.datasets import load_breast_cancer

# Load the data

df = load_breast_cancer()

# Check the typical 'data'
type(df)

df.keys()

df.data.shape

df.target

df.target_names

df.target.shape

df.feature_names

# Split the data into train and test sets
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(df.data, df.target, test_size=0.33)
N, D = X_train.shape

# Scale the data
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_train = scaler.fit_transform(X_train)
X_test = scaler.transform(X_test)

# Build the model
model = tf.keras.models.Sequential([
                                   tf.keras.layers.Input(shape = (D,)),
                                   tf.keras.layers.Dense(1, activation = 'sigmoid')
])

model.compile(optimizer = 'adam',
              loss = 'binary_crossentropy',
              metrics = ['accuracy'])

# Train the model
r = model.fit(X_train, y_train, validation_data = (X_test, y_test), epochs = 100)

# Evaluate the model
print("Train scores:", model.evaluate(X_train, y_train))
print("Test scores:", model.evaluate(X_test, y_test))

# Plot what's returned by model.fit()
import matplotlib.pyplot as plt
plt.plot(r.history['loss'], label = 'Loss')
plt.plot(r.history['val_loss'], label = 'Val Loss')
plt.legend()

# Plot the accuracy
plt.plot(r.history['accuracy'], label = 'Accuracy')
plt.plot(r.history['val_accuracy'], label = "Accuracy")
plt.legend()